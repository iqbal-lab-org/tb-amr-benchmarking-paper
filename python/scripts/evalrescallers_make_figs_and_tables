#!/usr/bin/env python3

import argparse
from collections import OrderedDict
import json
import os
import shutil

import evalrescallers_paper



parser = argparse.ArgumentParser(
    description = 'Makes figures and tables for paper',
    usage='%(prog)s <summary.json> <out_directory>',
)
parser.add_argument('summary_json', help='Summary json file made by tb-amr-benchmarking pipeline')
parser.add_argument('outdir', help='Directory name for output files (must not already exist)')
parser.add_argument('--debug', action='store_true', help='Do not delete temp files')
options = parser.parse_args()

options.summary_json = os.path.abspath(options.summary_json)

evalrescallers_dir = os.path.abspath(os.path.dirname(evalrescallers_paper.__file__))
python_data_dir = os.path.join(evalrescallers_dir, 'data')


r_is_res_prefix = 'r_is_resistant'
r_is_res_accuracy_stats_tsv = f'{r_is_res_prefix}.accuracy_stats.tsv'
r_is_susc_prefix = 'r_is_susceptible'
r_is_susc_accuracy_stats_tsv = f'{r_is_susc_prefix}.accuracy_stats.tsv'
samples_suppl_tsv = 'supplementary.table.samples.tsv'
removed_variants_tsv = 'supplementary.table.removed_variants.tsv'
map_files_prefix = 'figure.1.map'
map_world_pdf = f'{map_files_prefix}.world.pdf'
map_europe_pdf = f'{map_files_prefix}.europe.pdf'
map_legend_pdf = f'{map_files_prefix}.legend.pdf'
figure_barplot_validate_dataset_prefix = 'figure.2'
figure_barplot_validate_dataset_fig_pdf = f'{figure_barplot_validate_dataset_prefix}.pdf'
figure_barplot_validate_dataset_legend_pdf = f'{figure_barplot_validate_dataset_prefix}.legend.pdf'
figure_barplot_test_dataset_myk_compare_prefix = 'figure.3'
figure_barplot_test_dataset_myk_compare_fig_a_prefix = f'{figure_barplot_test_dataset_myk_compare_prefix}.a'
figure_barplot_test_dataset_myk_compare_fig_a_pdf = f'{figure_barplot_test_dataset_myk_compare_fig_a_prefix}.pdf'
figure_barplot_test_dataset_myk_compare_legend_pdf = f'{figure_barplot_test_dataset_myk_compare_prefix}.legend.pdf'
figure_barplot_test_dataset_myk_compare_fig_b_prefix = f'{figure_barplot_test_dataset_myk_compare_prefix}.b'
figure_barplot_test_dataset_myk_compare_fig_b_pdf = f'{figure_barplot_test_dataset_myk_compare_fig_b_prefix}.pdf'
figure_barplot_test_dataset_tool_compare_prefix = 'figure.4'
figure_barplot_test_dataset_tool_compare_fig_a_prefix = f'{figure_barplot_test_dataset_tool_compare_prefix}.a'
figure_barplot_test_dataset_tool_compare_fig_a_pdf = f'{figure_barplot_test_dataset_tool_compare_fig_a_prefix}.pdf'
figure_barplot_test_dataset_tool_compare_legend_pdf = f'{figure_barplot_test_dataset_tool_compare_prefix}.legend.pdf'
figure_barplot_test_dataset_tool_compare_fig_b_prefix = f'{figure_barplot_test_dataset_tool_compare_prefix}.b'
figure_barplot_test_dataset_tool_compare_fig_b_pdf = f'{figure_barplot_test_dataset_tool_compare_fig_b_prefix}.pdf'
figure_regimen_plot_prefix = f'figure.5'
figure_regimen_plot_pdf = f'figure.5.pdf'
figure_regimen_suppl_validate_prefix = f'supplementary.figure.regimen.validate'
figure_regimen_suppl_test_prefix = f'supplementary.figure.regimen.test'
table_r_vs_R_tex = f'table.2.tex'
table_mykrobe_accuracy_tex = f'table.1.tex'

run_time_and_memory_tsv = 'supplementary.table.run_time_and_memory.tsv'
run_time_and_memory_plot_prefix = 'supplementary.figure.resources'


try:
    os.mkdir(options.outdir)
except:
    raise Exception(f'Error making output directory "{options.outdir}". Cannot continue')

os.chdir(options.outdir)

with open(options.summary_json) as f:
    json_data = json.load(f)

summary_data_handler = evalrescallers_paper.summary_data_handler.SummaryDataHandler(
    json_data, 'tb', r_means_resistant=False)
summary_data_handler.run(r_is_susc_prefix)

summary_data_handler = evalrescallers_paper.summary_data_handler.SummaryDataHandler(
    json_data, 'tb', r_means_resistant=True)
summary_data_handler.run(r_is_res_prefix)

evalrescallers_paper.r_vs_R.table_of_diffs_between_stats_files(r_is_res_accuracy_stats_tsv, r_is_susc_accuracy_stats_tsv, '10k_validate', 'Mykrobe.201811', table_r_vs_R_tex)

countries_dict = evalrescallers_paper.samples_table.make_samples_tsv(json_data, samples_suppl_tsv)
evalrescallers_paper.maps.make_maps(map_files_prefix, countries_dict, debug=options.debug)

evalrescallers_paper.run_time_and_memory.json_to_tsv(json_data, run_time_and_memory_tsv)
evalrescallers_paper.run_time_and_memory.tsv_to_plot(run_time_and_memory_tsv, run_time_and_memory_plot_prefix)


plot_tools = ['10k_predict', 'Mykrobe.Walker-2015', 'Mykrobe.CP2']
evalrescallers_paper.horizontal_bar_chart.make_plot(
    summary_data_handler.tools_counts['10k_validate'],
    plot_tools,
    ['Ethambutol', 'Isoniazid', 'Pyrazinamide', 'Rifampicin', 'Amikacin', 'Capreomycin',
        'Ciprofloxacin', 'Kanamycin', 'Moxifloxacin', 'Ofloxacin', 'Quinolones', 'Streptomycin'],
    f'{figure_barplot_validate_dataset_prefix}.svg',
    how_to_scale='not at all',
)
evalrescallers_paper.horizontal_bar_chart.make_legend(plot_tools, f'{figure_barplot_validate_dataset_prefix}.legend.svg', header='Tool/variant panel')

plot_tools = ['10k_predict', 'Mykrobe.Walker-2015', 'Mykrobe.201811']
evalrescallers_paper.horizontal_bar_chart.make_plot(
    summary_data_handler.tools_counts['10k_test'],
    plot_tools,
    sorted(list(evalrescallers_paper.common_data.first_line_drugs)),
    f'{figure_barplot_test_dataset_myk_compare_fig_a_prefix}.svg',
    how_to_scale='not at all',
    susc_gap=[800,3800],
    susc_xticks=[0,250,500,750,4000],
    res_xticks=[0,250],
    plot_gap_size=20
)

evalrescallers_paper.horizontal_bar_chart.make_plot(
    summary_data_handler.tools_counts['10k_test'],
    plot_tools,
    ['Amikacin', 'Capreomycin', 'Ciprofloxacin', 'Kanamycin', 'Moxifloxacin', 'Ofloxacin', 'Quinolones', 'Streptomycin'],
    f'{figure_barplot_test_dataset_myk_compare_fig_b_prefix}.svg',
    how_to_scale='not at all',
    susc_gap=[220,680],
    susc_xticks=[0,50,100,150,200,700],
    res_xticks=[0,50],
    plot_gap_size=4
)

evalrescallers_paper.horizontal_bar_chart.make_legend(plot_tools, f'{figure_barplot_test_dataset_myk_compare_prefix}.legend.svg', header='Tool/variant panel')


plot_tools = ['ARIBA', 'KvarQ', 'MTBseq', 'Mykrobe.201811', 'TB-Profiler']
evalrescallers_paper.horizontal_bar_chart.make_plot(
    summary_data_handler.tools_counts['10k_test'],
    plot_tools,
    sorted(list(evalrescallers_paper.common_data.first_line_drugs)),
    f'{figure_barplot_test_dataset_tool_compare_fig_a_prefix}.svg',
    how_to_scale='not at all',
    susc_gap=[300,3850],
    susc_xticks=[0,100,200,3900,4000,4100,4200,4300],
    res_xticks=[0,100,200,300],
    plot_gap_size=15
)

evalrescallers_paper.horizontal_bar_chart.make_plot(
    summary_data_handler.tools_counts['10k_test'],
    plot_tools,
    ['Amikacin', 'Capreomycin', 'Ciprofloxacin', 'Kanamycin', 'Moxifloxacin', 'Ofloxacin', 'Quinolones', 'Streptomycin'],
    f'{figure_barplot_test_dataset_tool_compare_fig_b_prefix}.svg',
    how_to_scale='not at all',
    susc_gap=[230,660],
    susc_xticks=[0,50,100,150,200,700],
    res_xticks=[0,50],
    plot_gap_size=6
)

evalrescallers_paper.horizontal_bar_chart.make_legend(plot_tools, f'{figure_barplot_test_dataset_tool_compare_prefix}.legend.svg', header='Tool')


regimen_data = evalrescallers_paper.regimen_plot.load_regimen_counts_tsv(f'{r_is_res_prefix}.regimen_counts.summary.tsv', {'10k_test', '10k_validate'})
evalrescallers_paper.regimen_plot.plot_one_tool(regimen_data['Mykrobe.201811'], f'{figure_regimen_plot_prefix}.svg', ignore=[(0, 0)], y_scale=0.15)

regimen_data = evalrescallers_paper.regimen_plot.load_regimen_counts_tsv(f'{r_is_res_prefix}.regimen_counts.summary.tsv', {'10k_validate'})
evalrescallers_paper.regimen_plot.plot_one_tool(regimen_data['Mykrobe.201811'], f'{figure_regimen_suppl_validate_prefix}.svg', ignore=[(0, 0)], y_scale=0.2)

regimen_data = evalrescallers_paper.regimen_plot.load_regimen_counts_tsv(f'{r_is_res_prefix}.regimen_counts.summary.tsv', {'10k_test'})
evalrescallers_paper.regimen_plot.plot_one_tool(regimen_data['Mykrobe.201811'], f'{figure_regimen_suppl_test_prefix}.svg', ignore=[(0, 0)], y_scale=0.8)

first_line_sorted = sorted(list(evalrescallers_paper.common_data.first_line_drugs))
evalrescallers_paper.latex.tool_accuracy_table_on_one_dataset(r_is_res_accuracy_stats_tsv, 'Mykrobe.201811', first_line_sorted, '10k_test', table_mykrobe_accuracy_tex)



# Make a tex file that has the figues and table in. Can then copy+paste
# this into final latex file
f = open('latex.tex', 'w')
print(r'''\documentclass{article}
\usepackage{graphicx}
\usepackage{grffile}
\usepackage{dcolumn}
\begin{document}


\begin{figure}[h]
  \begin{picture}(400,300)
      \put(5,160){\includegraphics[width=14cm, trim=1.95cm 1.95cm 1.95cm 1.95cm,clip=true]{''' + map_world_pdf + r'''}}
      \put(5,0){\includegraphics[width=10cm, trim=1.9cm 1.9cm 1.9cm 1.9cm,clip=true]{''' + map_europe_pdf + r'''}}
      \put(330,55){\includegraphics[width=2.5cm]{''' + map_legend_pdf + r'''}}
  \end{picture}
  \caption{Caption for map figure}
  \label{figure: maps}
\end{figure}

\newpage
\begin{figure}[h]
  \begin{picture}(400,300)
    \put(0,0){\includegraphics[width=11cm]{''' + figure_barplot_validate_dataset_fig_pdf  + r'''}}
    \put(320,100){\includegraphics[width=5cm]{''' + figure_barplot_validate_dataset_legend_pdf  + r'''}}
  \end{picture}
  \caption{Caption for validate dataset bar plots}
  \label{figure: barplot validate dataset}
\end{figure}


\newpage
\begin{figure}[h]
  \begin{picture}(400,300)
    \put(20,200){\includegraphics[width=11cm]{''' + figure_barplot_test_dataset_myk_compare_fig_a_pdf  + r'''}}
    \put(20,0){\includegraphics[width=11cm]{''' + figure_barplot_test_dataset_myk_compare_fig_b_pdf  + r'''}}
    \put(350,140){\includegraphics[width=5cm]{''' + figure_barplot_test_dataset_myk_compare_legend_pdf  + r'''}}
    \put(0,320){\bf (a)}
    \put(0,170){\bf (b)}
  \end{picture}
  \caption{Caption for validate dataset bar plots}
  \label{figure: barplot test dataset mykrobe panels}
\end{figure}

\newpage
\begin{figure}[h]
  \begin{picture}(400,500)
    \put(20,360){\includegraphics[width=11cm]{''' + figure_barplot_test_dataset_tool_compare_fig_a_pdf  + r'''}}
    \put(20,0){\includegraphics[width=11cm]{''' + figure_barplot_test_dataset_tool_compare_fig_b_pdf  + r'''}}
    \put(350,290){\includegraphics[width=5cm]{''' + figure_barplot_test_dataset_tool_compare_legend_pdf  + r'''}}
    \put(0,545){\bf (a)}
    \put(0,335){\bf (b)}
  \end{picture}
  \caption{Caption for validate dataset bar plots}
  \label{figure: barplot test dataset compare tools}
\end{figure}


\newpage
\begin{figure}[h]
  \begin{picture}(200,300)
    \put(0,0){\includegraphics[width=16cm]{''' + figure_regimen_plot_pdf + r'''}}
  \end{picture}
  \caption{Caption for regimen figure}
  \label{figure: regimen for mykrobe}
\end{figure}

\clearpage
\begin{table}
\small
  \hspace{-10em}\input{''' + table_r_vs_R_tex + r'''}
  \caption{Caption for r vs R table}
  \label{label: table r vs R}
\end{table}
\begin{table}

\small
  \hspace{-10em}\input{''' + table_mykrobe_accuracy_tex + r'''}
  \caption{Caption for mykrobe accuracy table}
  \label{label: mykrobe accuracy}
\end{table}

\end{document}''', file=f)

f.close()


eval_dir = os.path.abspath(os.path.dirname(evalrescallers_paper.__file__))
to_copy = os.path.join(eval_dir, 'data', 'removed_variants.tsv')
shutil.copyfile(to_copy, removed_variants_tsv)
