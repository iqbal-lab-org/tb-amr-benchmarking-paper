#!/usr/bin/env python3

import argparse
from collections import OrderedDict
import json
import os

import evalrescallers_paper


parser = argparse.ArgumentParser(
    description = 'Makes figures and tables for paper',
    usage='%(prog)s <summary.json> <out_directory>',
)
parser.add_argument('summary_json', help='Summary json file made by tb-amr-benchmarking pipeline')
parser.add_argument('outdir', help='Directory name for output files (must not already exist)')
parser.add_argument('--debug', action='store_true', help='Do not delete temp files')
options = parser.parse_args()

options.summary_json = os.path.abspath(options.summary_json)
r_is_res_prefix = 'r_is_resistant'
r_is_susc_prefix = 'r_is_susceptible'
samples_suppl_tsv = 'supplementary.table.samples.tsv'
map_files_prefix = 'figure.map'
run_time_and_memory_tsv = 'supplementary.table.run_time_and_memory.tsv'
run_time_and_memory_plot_prefix = 'supplementary.figure.resources'


try:
    os.mkdir(options.outdir)
except:
    raise Exception(f'Error making output directory "{options.outdir}". Cannot continue')

os.chdir(options.outdir)

with open(options.summary_json) as f:
    json_data = json.load(f)

summary_data_handler = evalrescallers_paper.summary_data_handler.SummaryDataHandler(
    json_data, 'tb', r_means_resistant=True)
summary_data_handler.run(r_is_res_prefix)

summary_data_handler = evalrescallers_paper.summary_data_handler.SummaryDataHandler(
    json_data, 'tb', r_means_resistant=False)
summary_data_handler.run(r_is_susc_prefix)

countries_dict = evalrescallers_paper.samples_table.make_samples_tsv(json_data, samples_suppl_tsv)
evalrescallers_paper.maps.make_maps(map_files_prefix, countries_dict, debug=options.debug)

evalrescallers_paper.run_time_and_memory.json_to_tsv(json_data, run_time_and_memory_tsv)
evalrescallers_paper.run_time_and_memory.tsv_to_plot(run_time_and_memory_tsv, run_time_and_memory_plot_prefix)

accuracy_tsv = f'{r_is_res_prefix}.accuracy_stats.tsv'
tools = OrderedDict([
    ('ARIBA', 'ARIBA'),
    ('KvarQ', 'KvarQ'),
    ('MTBseq', 'MTBseq'),
    ('TB-Profiler', 'TB-Profiler'),
    ('Mykrobe.Walker-2015', 'Mykrobe-2015'),
    ('Mykrobe.201811', 'Mykrobe-2018'),
    ('10k_predict', '10k_predict'),
])
drugs = OrderedDict([
    ('Ethambutol', 'ETH'),
    ('Isoniazid', 'ISO'),
    ('Pyrazinamide', 'PZA'),
    ('Rifampicin', 'RIF'),
    ('Streptomycin', 'STREP'),
])

evalrescallers_paper.bar_charts.make_res_susc_bar_charts(accuracy_tsv, ['10k_test', '10k_validate', 'mykrobe'], tools, drugs, 'figure.bar_plot')

